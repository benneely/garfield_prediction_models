let variable_formats = {
    miua: 'Myocardial infarction or unstable angina or peripheral aortic or artery disease?',
    hx_bleeding: 'Medical history of bleeding?',
    hx_heart_failure: 'Medical history of heart failure or an ejection fraction < 40? (If ejection fraction is not available, use medical history of heart failure only.)',
    chronic_kidney: 'Chronic kidney disease levels of III-V?',
    vitamin_k: 'At enrollment, patient is given or already taking a Vitamin K antagonist or Rivaroxaban or Apixaban or Endoxaban or Dibigatran?',
    hx_stroke: 'Medical history of stroke?',
    a_e_sa: 'Australia, Egypt, South Africa?',
    race: 'Race/Ethnicity.',
    hx_ca_pvd: 'History of coronary artery disease or peripheral vascular disease?',
    egfr_60: 'eGFR<60 with eGFR estimated using the MDRD method?'
}

// Represents data lifted from UI and transformed into numerical format. For example
// Yes=1, No=0, 'Caucasian, Hispanic/Latino, Asian'=0, 'Afro-Caribean, Mixed Race, Other
// This should be all you need to collect to run all three models. This represents 1 patient to score
let data = {
    age: 70, pulse: 120, sbp: 110, miua: 0, hx_bleeding: 0, 
    hx_heart_failure: 0, chronic_kidney: 0, vitamin_k: 0, hx_stroke: 0,
    a_e_sa: 0, race: 0, hx_ca_pvd: 0,
    egfr_60: 0
}

function sum_array(array) {
    return array.reduce((a,b) => a + b, 0)
}

// Be careful with this function, object 1 must come from model_parameter_estimates so that we
// filter out variables not needed from user input
function dot_product_objects(model_betas_object, user_input_object) {
    var product_array = []
    for (var key in model_betas_object) {
        a = model_betas_object[key]
        b = user_input_object[key]
        product_array.push(a * b)
    }
    return sum_array(product_array)
}

let death_reduced_parameter_estimates = {
    time: [
        0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,
        36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,
        71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,
        104,105,106,107,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,
        130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,
        155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,
        180,181,182,183,184,185,186,187,188,189,190,191,192,193,195,196,197,198,199,200,201,202,203,204,205,
        206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,
        231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,
        256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,
        281,282,283,284,285,286,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,
        307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,
        332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,
        357,358,359,360,361,362,363,364,365
    ],
    baseline_hazard: [
        1,0.999990921,0.999945521,0.999854517,0.99978167,0.999699674,0.999626735,0.999590252,0.999553764,0.999453365,0.999389427,0.999352881,0.999261456,0.999206551,
        0.999124171,0.999050918,0.998959293,0.998913465,0.998885956,0.998821757,0.998729998,0.998656557,0.998583092,0.998509588,0.998463627,0.998399263,0.998288903,
        0.998233687,0.998206073,0.998187659,0.998123184,0.998067901,0.998049464,0.99798493,0.997920351,0.997837278,0.997781884,0.99771722,0.997661775,0.997624801,
        0.997615554,0.997578566,0.997541554,0.99750454,0.997495284,0.997448999,0.997393433,0.997356381,0.997328589,0.997263732,0.997235923,0.99721738,0.997161738,
        0.997133905,0.997087509,0.997013262,0.99694827,0.996920399,0.996883233,0.996846058,0.996808878,0.996762397,0.996706606,0.996641509,0.996594972,0.996576351,
        0.996557728,0.99650186,0.996436664,0.99640871,0.996362108,0.996324812,0.996259513,0.996231519,0.99617553,0.996128859,0.996091508,0.996054155,0.996016793,
        0.995923376,0.995895331,0.995839231,0.995792462,0.995755038,0.995698884,0.995670784,0.995652048,0.995605198,0.995539587,0.995483313,0.995427019,0.995351943,
        0.995304986,0.995220422,0.995154607,0.995088733,0.995051073,0.994975749,0.994938076,0.994872115,0.994843831,0.99477779,0.994749478,0.994740036,0.994683375,
        0.994626679,0.994588867,0.994522664,0.994503734,0.99446587,0.994399581,0.994342717,0.994304772,0.99421936,0.994190857,0.994114801,0.994067206,0.993971987,
        0.993905264,0.993838486,0.993771614,0.993733343,0.993647072,0.993570288,0.993531874,0.993493447,0.993455007,0.993406945,0.993339623,0.9932819,0.993262657,
        0.993204916,0.993156759,0.993108589,0.993050773,0.992992941,0.992944707,0.99292541,0.99290611,0.992819241,0.992780619,0.992712995,0.992693665,0.992626006,
        0.99254865,0.99248092,0.992432513,0.992384091,0.992345342,0.992296885,0.992287192,0.992267805,0.992258111,0.992199942,0.992170843,0.992161139,0.992102914,
        0.992093208,0.992073796,0.992064087,0.992044669,0.991986413,0.991918421,0.991879552,0.991850395,0.991782353,0.991724004,0.991704548,0.991694817,0.991675352,
        0.991626686,0.991587745,0.991568271,0.991539059,0.991500099,0.991470874,0.991422158,0.991373408,0.991353903,0.991295382,0.991275869,0.991266112,0.991227077,
        0.991188029,0.991158739,0.991119662,0.991100122,0.99107081,0.991012181,0.990992629,0.990973075,0.990885073,0.990855732,0.990806814,0.990738321,0.990708959,
        0.990660017,0.990620845,0.990601254,0.990571866,0.990562069,0.990513066,0.990493457,0.99048365,0.99045423,0.99044442,0.990434609,0.990395362,0.990385544,
        0.99033645,0.990297156,0.990238188,0.990218523,0.990159511,0.990129984,0.990120139,0.990090589,0.990051175,0.989982184,0.989932892,0.989873729,0.98984413,
        0.98982439,0.989794766,0.989765125,0.989745355,0.98973546,0.989725562,0.989695861,0.989676048,0.989616581,0.989566993,0.989517383,0.989477672,0.989447851,
        0.989418007,0.98937819,0.989348306,0.989308443,0.989268536,0.989238587,0.989178614,0.989128528,0.989078292,0.989017915,0.988997769,0.988957465,0.988907076,
        0.988836504,0.988775986,0.988745718,0.988725535,0.988654853,0.988624536,0.988594211,0.988543667,0.988493096,0.98843238,0.988402016,0.988341265,0.988300741,
        0.988270335,0.98825006,0.988209508,0.988168945,0.988108077,0.98806749,0.988016734,0.987986268,0.987955796,0.987864372,0.987823727,0.987783057,0.987732212,
        0.987681345,0.987620286,0.987599919,0.98755918,0.987538803,0.987528613,0.987508232,0.987487849,0.987457271,0.987436884,0.987365519,0.987345126,0.987314532,
        0.98725333,0.987222723,0.987181905,0.987141084,0.987090045,0.987059412,0.987008335,0.98697768,0.98695724,0.986926572,0.986895888,0.986834511,0.986824277,
        0.986793576,0.986732159,0.986701445,0.986680965,0.986670724,0.986619514,0.986588781,0.986578536,0.986547799,0.986537553,0.986527305,0.986486312,0.986476061,
        0.986424807,0.986342785,0.98632227,0.986301754,0.986229911,0.986199107,0.98614776,0.986106671,0.986075839,0.986055259,0.986024355,0.985983108,0.98596247,
        0.985890169,0.985879832,0.985859144,0.985797003,0.985776276,0.985724414,0.985641353,0.985610169,0.985568544,0.985506024,0.985464279,0.985401603,0.985359792,
        0.985338866,0.985317919,0.985275973,0.985244463,0.985202406,0.985191874,0.98518133,0.985086357,0.985044052,0.985001682,0.984980446,0.984959155,0.98491649,
        0.984863077,0.984841667,0.984787986,0.984766451,0.984636832,0.984615135,0.984582492,0.984560656,0.984505897,0.984417795      
    ],
    betas: {
        age: 0.060208102,
        pulse: 0.008235567,
        sbp: -0.008211021,
        miua: 0.406906988,
        hx_bleeding: 0.512334926,
        hx_heart_failure: 0.780055766,
        chronic_kidney: 0.554435057,
        vitamin_k: -0.422166311
    },
    referencePoints: {
        age: 60,
        pulse: 80,
        sbp: 120,
        miua: 0,
        hx_bleeding: 0,
        hx_heart_failure: 0,
        chronic_kidney: 0,
        vitamin_k: 0
    }
}

let stroke_systemic_embolism_estimates = {
    time: [0,1,2,3,4,5,6,8,9,10,11,12,13,14,16,17,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,38,40,41,42,43,44,45,47,48,52,53,54,56,57,58,59,61,62,63,64,65,66,67,68,69,70,
        72,73,74,76,77,78,80,82,83,84,85,86,89,90,91,93,94,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,113,114,115,116,117,118,119,122,123,124,125,126,127,128,
        129,130,131,132,133,134,135,136,137,138,139,141,143,145,146,147,148,149,151,152,155,156,158,159,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,
        179,181,182,183,185,186,187,190,194,195,197,199,201,202,203,204,205,208,210,211,212,213,215,216,218,220,221,223,224,225,226,227,233,234,235,236,237,238,239,240,241,242,
        244,245,246,249,251,255,256,257,258,259,260,261,262,263,264,266,268,272,273,274,275,276,277,279,280,281,282,283,286,287,288,289,290,292,293,294,295,299,306,307,311,312,
        314,315,316,317,318,320,323,325,326,327,328,331,332,334,336,338,339,342,343,345,346,348,350,351,352,353,354,356,358,361,362,363,364],
    baseline_hazard: [1,0.999813261,0.999762311,0.999745287,0.999677172,0.999609008,0.999557827,0.999472481,0.999438313,0.999369944,0.999284433,0.999233102,0.999215967,0.999181684,
        0.999147375,0.999095887,0.999061537,0.999009989,0.998992795,0.998941193,0.998906775,0.998889557,0.9988551,0.998837861,0.998820617,0.998803369,0.998786116,
        0.998768855,0.998734324,0.998699785,0.998647952,0.998578808,0.998544192,0.998509557,0.998492239,0.998457591,0.99837096,0.998336293,0.998318955,0.998284263,
        0.998249563,0.998162745,0.998127999,0.998075873,0.998006336,0.997988941,0.997971539,0.997954135,0.997919307,0.99790189,0.997867046,0.997832196,0.997797323,
        0.99777988,0.997710102,0.997675205,0.997622847,0.997570467,0.997535529,0.997500569,0.997465598,0.997448106,0.997430609,0.997413109,0.997343083,0.99732556,
        0.997308031,0.997290497,0.997272959,0.997237862,0.997220303,0.99718517,0.99715002,0.997132429,0.997097231,0.99707961,0.997061984,0.997044352,0.997026715,
        0.997009069,0.996956106,0.996920777,0.996885437,0.99686776,0.99685008,0.996832389,0.996779277,0.996743851,0.996726133,0.996708412,0.996690682,0.996672944,
        0.996637438,0.996619677,0.996601901,0.996566325,0.996548517,0.996477261,0.99642364,0.996298358,0.996226627,0.996208666,0.996172723,0.996136773,0.996118791,
        0.996100803,0.996082807,0.996010813,0.995992811,0.995920793,0.995902777,0.995884757,0.995866733,0.995830675,0.995776565,0.995758523,0.995722424,0.995704354,
        0.995686276,0.995632024,0.995613928,0.995595827,0.99557772,0.995559605,0.995541487,0.995505236,0.995468965,0.99543268,0.995414532,0.995378238,0.995360086,
        0.99532378,0.995305624,0.995287464,0.995269295,0.995232949,0.995196595,0.995160212,0.995123823,0.995087424,0.995051022,0.995032816,0.995014606,0.994941759,
        0.994923542,0.99486888,0.994850657,0.994795959,0.994777717,0.994759472,0.994741226,0.994668213,0.994649953,0.994631688,0.994613416,0.994595129,0.994576841,
        0.994521951,0.994485336,0.994448698,0.994430374,0.99439372,0.99437539,0.994357055,0.99433871,0.994302008,0.99424693,0.994228567,0.994191823,0.994173434,
        0.994118248,0.994099837,0.994081413,0.994026127,0.993989248,0.993970799,0.993952344,0.993933881,0.99387847,0.993859956,0.993841431,0.993804359,0.993785815,
        0.993748686,0.993730109,0.993692934,0.993637129,0.993618514,0.993599882,0.993543871,0.993525158,0.993506389,0.993449939,0.993431113,0.993412264,0.993393406,
        0.993374543,0.993355678,0.993317929,0.993299049,0.993280164,0.993242383,0.993204587,0.993166781,0.993147871,0.993110025,0.993091081,0.993072134,0.993034231,
        0.993015273,0.99299631,0.992958362,0.992939375,0.992920383,0.99290138,0.992863363,0.992844354,0.99280632,0.992787302,0.992768281,0.992749256,0.992730229,
        0.99271119,0.992673106,0.992654063,0.992635015,0.992615948,0.992577757,0.992539559,0.992501341,0.992482227,0.992463109,0.992443988,0.992424863,0.992405735,
        0.992386601,0.992348319,0.992329161,0.992309986,0.992290792,0.992271581,0.992252351,0.992213798,0.992194506,0.992175174,0.992117064,0.992097642,0.992078193,
        0.992039182,0.991941547,0.991902393,0.991843578,0.991764936,0.991745231,0.991685995,0.991646439,0.991586973,0.991547242,0.991527309,0.991507294,0.991487078,
        0.991466799,0.991426092,0.991344397],
    betas: {
        age: 0.03048226,
        hx_stroke: 0.952524717,
        hx_bleeding: 0.432357326,
        hx_heart_failure: 0.319129628,
        chronic_kidney: 0.574919171,
        a_e_sa: 0.654249546,
        race: 0.671380382,
        vitamin_k: -0.582045773
    },
    referencePoints: {
        age: 60,
        hx_stroke: 0,
        hx_bleeding: 0,
        hx_heart_failure: 0,
        chronic_kidney: 0,
        a_e_sa: 0,
        race: 0,
        vitamin_k: 0
    }
}

let stroke_or_majorbleed_estimates = {
    time: [0,1,2,3,4,5,6,9,10,11,12,13,15,16,18,20,21,23,24,26,29,30,31,32,34,35,36,39,40,42,46,47,48,49,51,52,54,56,57,59,65,68,69,70,71,72,74,75,78,80,82,83,84,85,86,88,89,90,93,
        98,99,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,119,120,122,123,124,125,126,131,133,137,138,141,148,152,154,157,158,159,160,161,162,163,164,166,168,
        171,175,176,182,184,187,188,192,193,196,198,202,205,206,212,214,216,219,222,223,228,229,231,232,235,236,237,244,246,247,248,250,254,258,259,260,261,262,268,271,272,273,
        275,276,280,281,282,283,284,285,286,291,295,296,298,300,301,303,305,307,310,313,314,317,320,322,323,330,332,334,335,338,339,342,344,350,352,353,355,356,357,359,360,361,365],
    baseline_hazard: [1,0.999980813,0.999961626,0.999903961,0.999865498,0.999846261,0.999827019,0.999788501,0.999730702,0.999711426,0.999672869,0.999615009,0.999557102,0.999537787,
        0.999518465,0.999479807,0.999421806,0.999344431,0.999325077,0.999286351,0.999266974,0.999228202,0.999170034,0.999131241,0.999111837,0.99905361,0.999014776,
        0.998995343,0.998975906,0.998956465,0.998898096,0.998878633,0.998859169,0.998839699,0.998820223,0.998781267,0.998742293,0.998722799,0.9987033,0.998683795,
        0.998625214,0.998605682,0.998586147,0.99854706,0.998507962,0.998488409,0.998468851,0.99844929,0.998429711,0.998390542,0.998351346,0.998312137,0.998292525,
        0.998214058,0.998194433,0.998174806,0.998135543,0.998115903,0.998096243,0.998056841,0.998017424,0.997977975,0.997958243,0.997938501,0.997918757,0.997879252,
        0.99785949,0.997839719,0.99780016,0.997780377,0.997760589,0.997740788,0.99772098,0.997701159,0.997681328,0.997661485,0.997621738,0.997562083,0.997522238,
        0.997502297,0.99746236,0.997442373,0.99742238,0.997402366,0.997382345,0.997362292,0.997342231,0.997322159,0.997302043,0.997281915,0.997241647,0.997201341,
        0.997161028,0.997120708,0.997100546,0.997060212,0.997040042,0.996979524,0.996959343,0.996918968,0.996898769,0.996878556,0.996838107,0.996817879,0.996797629,
        0.996777372,0.996757106,0.996736837,0.99671656,0.996676004,0.996655716,0.996635422,0.996615114,0.99659479,0.996554132,0.996513407,0.996472641,0.996452243,
        0.99641141,0.996390971,0.996350085,0.996329596,0.996268085,0.996247556,0.996206486,0.996185918,0.996165342,0.996144751,0.996124064,0.996103282,0.996061665,
        0.996020024,0.995957519,0.99593666,0.995894917,0.995874042,0.995853158,0.995832269,0.995811371,0.995790442,0.99574857,0.995685748,0.995664801,0.995643834,
        0.995601889,0.995580889,0.995538883,0.995517878,0.995496871,0.995475859,0.995454844,0.995433823,0.995412786,0.995370677,0.995328558,0.995307496,0.995286427,
        0.995265354,0.99524427,0.995202097,0.995181001,0.995159892,0.995138775,0.995096527,0.995075394,0.995054249,0.995033095,0.99499078,0.994948291,0.994927,0.994905657,
        0.994862935,0.99484148,0.99481999,0.994798427,0.994776817,0.994755026,0.994733143,0.994711203,0.994667115,0.994622946,0.994578702,0.994556453,0.994534131,
        0.994511709,0.994488926],
    betas: {
        age: 0.0389958,
        hx_ca_pvd: 0.515013074,
        egfr_60: 0.577378429
    },
    referencePoints: {
        age: 60,
        hx_ca_pvd: 0,
        egfr_60: 0
    }
}

function calculate_survival_function(ui_input, reference_input) {
    return Math.exp(
        ui_input - reference_input
    )
}


function calculate_risk(parameter_estimate_object, input_object) {
    var input_score = dot_product_objects(
        parameter_estimate_object['betas'], 
        input_object
    )
    var reference_score = dot_product_objects(
        parameter_estimate_object['betas'], 
        parameter_estimate_object['referencePoints']
    )
    var cdf =  parameter_estimate_object['baseline_hazard'].map((x) => {
            return (1 - Math.pow(
                x, 
                calculate_survival_function(
                    input_score,
                    reference_score
                )
            ))
        })
    return cdf
}

//Example
// ex will be the array that displays the risk trajectory over time and should equal the length of time array
// ex = calculate_risk(death_reduced_parameter_estimates, data)
// the last element of this array should equal the risk display in text under the plot
// console.log(ex[ex.length-1])
// ex = calculate_risk(stroke_or_majorbleed_estimates, data)
// the last element of this array should equal the risk display in text under the plot
// console.log(ex[ex.length-1])
ex = calculate_risk(stroke_systemic_embolism_estimates, data)
// the last element of this array should equal the risk display in text under the plot
console.log(ex[ex.length-1])