1471485244202:shiny::runApp('garfield-bleeding')
1471539912254:shiny::runApp('garfield-bleeding')
1471540613068:runApp('garfield-bleeding')
1471540637649:runApp('garfield-bleeding')
1471540753398:runApp('garfield-bleeding')
1471540761466:shiny::runApp('garfield-bleeding')
1471540986244:runApp('garfield-bleeding')
1471541267963:library(XML)
1471541267969:library(shiny)
1471541267977:library(ggplot2)
1471541267988:library(scales)
1471541267994:#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
1471541268004:#Additional functions needed for this app
1471541268011:#Function needed in server.R to coerce user input to numeric data.frame
1471541268018:#Convert xml objects to data.frame
1471541268024:xml2dfNAMED <- function(xmlRooters,value,name,char=F) {
1471541268030:QQ <- vector("list",xmlSize(xmlRooters))
1471541268038:for(i in 1:xmlSize(xmlRooters)){
1471541268043:QQ[[ i ]] <- xmlAttrs(xmlRooters[[i]])[[value]]
1471541268049:names(QQ[[ i ]]) <- xmlAttrs(xmlRooters[[i]])[[name]]
1471541268054:}
1471541268060:a <- unlist(QQ)
1471541268066:b <- data.frame(as.list(a))
1471541268074:if (char==F) {
1471541268079:c <- data.frame(lapply(b[1,], function(x) as.numeric(levels(x))[x]))
1471541268084:return(c)
1471541268089:} else {
1471541268093:return(b)
1471541268099:}
1471541268103:}
1471541268108:checkandconvert <- function(x) {
1471541268113:if (betaType[names(x)]=="continuous") {return (as.numeric(x))}
1471541268118:else if (betaType[names(x)]=="categorical") {
1471541268122:if (x==mappingType[names(x)]) {return (as.numeric(1))}
1471541268126:else {return (as.numeric(0))}
1471541268130:}
1471541268135:}
1471541268140:#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
1471541268145:#Establish a connection with the database
1471541268149:#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
1471541268154:#Let's put together a xml object so that we can use certain functions to parse
1471541268159:allFiles <- list.files()
1471541268165:pmmlFiles <- allFiles[grep('*.pmml',allFiles)]
1471541268170:xmlfile <- xmlParse(pmmlFiles[[1]])
1471541268176:xmltop <- xmlRoot(xmlfile) #gives content of root
1471541276710:pmmlFiles
1471541283975:allFiles
1471541753630:runApp('garfield-bleeding')
1471541772506:runApp('garfield-bleeding')
1471542453700:runApp('garfield-bleeding')
1471544120305:shiny::runApp('garfield-bleeding')
1471544307058:runApp('garfield-bleeding')
1471544367665:runApp('garfield-bleeding')
1471544450168:runApp('garfield-bleeding')
1471544469467:runApp('garfield-bleeding')
1471544526563:runApp('garfield-bleeding')
1471544610564:getwd()
1471544628630:setwd('/home/rstudio/garfield-bleeding')
1471544636438:library(XML)
1471544636444:library(shiny)
1471544636450:library(ggplot2)
1471544636456:library(scales)
1471544636462:#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
1471544636467:#Additional functions needed for this app
1471544636473:#Function needed in server.R to coerce user input to numeric data.frame
1471544636478:#Convert xml objects to data.frame
1471544636482:xml2dfNAMED <- function(xmlRooters,value,name,char=F) {
1471544636487:QQ <- vector("list",xmlSize(xmlRooters))
1471544636492:for(i in 1:xmlSize(xmlRooters)){
1471544636497:QQ[[ i ]] <- xmlAttrs(xmlRooters[[i]])[[value]]
1471544636501:names(QQ[[ i ]]) <- xmlAttrs(xmlRooters[[i]])[[name]]
1471544636506:}
1471544636512:a <- unlist(QQ)
1471544636516:b <- data.frame(as.list(a))
1471544636521:if (char==F) {
1471544636527:c <- data.frame(lapply(b[1,], function(x) as.numeric(levels(x))[x]))
1471544636533:return(c)
1471544636537:} else {
1471544636542:return(b)
1471544636546:}
1471544636550:}
1471544636556:checkandconvert <- function(x) {
1471544636560:if (betaType[names(x)]=="continuous") {return (as.numeric(x))}
1471544636565:else if (betaType[names(x)]=="categorical") {
1471544636569:if (x==mappingType[names(x)]) {return (as.numeric(1))}
1471544636574:else {return (as.numeric(0))}
1471544636579:}
1471544636583:}
1471544640754:list.files()
1471544646718:allFiles <- list.files()
1471544646726:pmmlFiles <- allFiles[grep('*.pmml',allFiles)]
1471544646736:xmlfile <- xmlParse(pmmlFiles[[1]])
1471544646770:xmltop <- xmlRoot(xmlfile) #gives content of root
1471544650187:dict <- xmltop[["DataDictionary"]]
1471544654579:xml2dfNAMED(xmlRooters=xmlChildren(xmltop[["GeneralRegressionModel"]])[["ParameterList"]],value="referencePoint",name="label",char=F)
1471544678163:a = c("test"=3,"best"=4)
1471544679274:a
1471544694676:type(a)
1471545277272:xml2dfNAMED(xmlRooters=xmlChildren(xmltop[["GeneralRegressionModel"]])[["PPMatrix"]], value="predictorName", name="parameterName",char=T)
1471545309529:xml2dfNAMED(xmlRooters=xmlChildren(xmltop[["GeneralRegressionModel"]])[["PPMatrix"]], value="value", name="predictorName",char=T)
1471545334478:xml2dfNAMED(xmlRooters=xmlChildren(xmltop[["DataDictionary"]]), value="optype", name="name",char=T)
1471545417551:c("country"="categorical","age"="continuous","sbp"="continuous","hxhf"="categorical","ckd"="categorical","sbp"="categorical","ap"="categorical")
1471545474850:xml2dfNAMED(xmlRooters=xmlChildren(xmltop[["GeneralRegressionModel"]])[["ParamMatrix"]], value="beta", name="parameterName",char=F)
1471545906436:betas <- c("age"=0.03752473,"australia"=-0.218473958,"austria"=0.159933164,"belgium"=-0.418820175,"brazil"=-0.489144157,"canada"=-1.005531926,"chile"=0.041576453,
1471545906445:"denmark"=-0.260201289,"spain"=-0.560461262,"finland"=0.410690944,"UK"=-0.525918093,"hungary"=-0.564631916,"italy"=-0.58668433,"korea"=-0.234378602,
1471545906452:"netherlands"=0.174333537,"norway"=0.42991423,"thailand"=-0.497083762,"hxhf"=0.8810468,"ckd"=0.658942324,"sbp"=0.00623828,"ap"=0.517418301)
1471545924136:colnames(referencePoints)
1471545935887:as.numeric(unname(sapply(xmlChildren(xmlChildren(xmltop[["GeneralRegressionModel"]])[["BaseCumHazardTables"]]), xmlGetAttr, "time")))
1471545951686:zz = c(123,3542,345345,34534,23423)
1471545952402:zz
1471546321275:as.numeric(unname(sapply(xmlChildren(xmlChildren(xmltop[["GeneralRegressionModel"]])[["BaseCumHazardTables"]]), xmlGetAttr, "cumHazard")))
1471546668592:mlGetAttr(xmltop[["Header"]],name='description')
1471546672406:xmlGetAttr(xmltop[["Header"]],name='description')
1471546694388:getNodeSet(xmlfile,"//PMML:DerivedField",c(PMML="http://www.dmg.org/PMML-4_2"))
1471546728873:xml2dfNAMED(xmlRooters=xmlChildren(xmltop[["DataDictionary"]]), value="optype", name="name",char=T)
1471546734232:xml2dfNAMED(xmlRooters=xmlChildren(xmltop[["GeneralRegressionModel"]])[["PPMatrix"]], value="value", name="predictorName",char=T)
1471546748723:xml2dfNAMED(xmlRooters=xmlChildren(xmltop[["GeneralRegressionModel"]])[["PPMatrix"]], value="predictorName", name="parameterName",char=T)
1471546857155:mappingType <- xml2dfNAMED(xmlRooters=xmlChildren(xmltop[["GeneralRegressionModel"]])[["PPMatrix"]], value="value", name="predictorName",char=T)
1471546861529:mappingType
1471607473878:shiny::runApp('garfield-bleeding')
1471607492639:runApp('garfield-bleeding')
1471609027770:runApp('garfield-stroke')
1471610946815:iris
1471611500249:runApp('garfield-stroke')
1471614092281:shiny::runApp('garfield-bleeding-work')
1471614205461:getwd()
1471614225294:setwd('/home/rstudio/garfield-bleeding-work')
1471614230589:list.files()
1471614234643:allFiles <- list.files()
1471614234652:pmmlFiles <- allFiles[grep('*.pmml',allFiles)]
1471614234662:xmlfile <- xmlParse(pmmlFiles[[1]])
1471614234685:xmltop <- xmlRoot(xmlfile) #gives content of root
1471614238433:dict <- xmltop[["DataDictionary"]]
1471614245436:xmlSize(dict))
1471614249778:xmlSize(dict)
1471614268886:i=1
1471614275703:xmlAttrs(dict[[i]])
1471614288612:i=4
1471614293216:xmlAttrs(dict[[i]]
1471614297325:)
1471614335904:as.numeric(xmlAttrs(xmlChildren(dict[[i]])$Interval)[["leftMargin"]])
1471614346082:xmlAttrs(xmlChildren(dict[[i]])$Interval)
1471614353101:xmlChildren(dict[[i]])
1471614429883:inputId=xmlAttrs(dict[[i]])[["name"]]
1471614434501:inputId
1471614444533:xmlChildren(xmltop[["DataDictionary"]][[i]]
1471614447846:)
1471614462266:unname(sapply(xmlChildren(xmltop[["DataDictionary"]][[i]]), xmlGetAttr, "value"))
1471614480984:c("Unstable Angina","NSTEMI" )
1471614873602:xmlAttrs(dict[[i]])[["name"]]
1471614888544:xmlAttrs(dict[[i]])[["displayName"]]
1471614966700:unname(sapply(xmlChildren(xmltop[["DataDictionary"]][[i]]), xmlGetAttr, "value"))
1471615088362:sapply(xmlChildren(xmltop[["DataDictionary"]][[i]]), xmlGetAttr, "value")[[1]])
1471615094236:sapply(xmlChildren(xmltop[["DataDictionary"]][[i]]), xmlGetAttr, "value")[[1]]
1471615253571:i
1471615255662:i=5
1471615263022:xmlChildren(dict[[i]])
1471615271568:i=6
1471615276878:i=3
1471615284792:xmlChildren(dict[[i]])
1471615303953:as.numeric(xmlAttrs(xmlChildren(dict[[i]])$Interval)[["size"]])
1471615380020:runApp()
1471615533716:runApp()
1471615651036:runApp()
1471615721339:runApp()
1471615735836:runApp()
1471624556215:upper = c("age"=105,"sbp"=270,"dpb"=180)
1471624556221:lower = c("age"=18,"sbp"=40,"dbp"=26)
1471624560343:length(upper)
1471624627401:upper
1471624631172:names(upper)
1471624650839:names(upper)[1]
1471624724190:xmlAttrs(dict[[i]])[["name"]]
1471624843473:lower[i]
1471624850803:as.numeric(lower[i])
1471625191118:betaType
1471625197533:length(betaType)
1471625443594:input <- list(age=60,hxhf="Yes",ap="No",sbp=140,country="UK",ckd="No")
1471625448751:QQ <- vector("list",length(betaType))
1471625455188:for(i in 1:length(betaType)){
1471625455192:QQ[[ i ]] <- eval(parse(text = paste("input$", betaType[i], sep="")))
1471625455197:names(QQ[[ i ]]) <- names(betaType)[i]
1471625455202:}
1471625464928:i
1471625469761:names(betaType)
1471625472848:names(betaType)[i]
1471625474864:QQ
1471625483498:eval(parse(text = paste("input$", betaType[i], sep="")))
1471625502155:eval(parse(text = paste("input$", names(betaType)[i], sep="")))
1471625531646:names(betaType)[i]
1471625555398:for(i in 1:length(betaType)){
1471625555403:QQ[[ i ]] <- eval(parse(text = paste("input$", names(betaType)[i], sep="")))
1471625555408:names(QQ[[ i ]]) <- names(betaType)[i]
1471625555413:}
1471625558320:QQ
1471625604381:which(sapply(QQ, is.character))
1471625621302:QQ[indx]
1471625625040:indx <- which(sapply(QQ, is.character))
1471625629191:QQ[indx]
1471625673941:x = QQ[indx][1]
1471625674475:x
1471625683349:(betaType[names(x)]=="continuous")
1471625692600:betaType[names(x)]
1471625699983:names(x)
1471625702719:x
1471625722691:unlist(x)
1471625738018:names(unlist(x))
1471625742932:betaType[names(unlist(x))]
1471625748005:(betaType[names(unlist(x))]=="continuous")
1471625762772:(betaType[names(unlist(x))]=="categorical")
1471625820356:names(unlist(x))
1471625826964:x
1471625832837:x
1471625840436:names(unlist(x))
1471626234188:x
1471626239744:result = c("Australia"=0,"Austria"=0,"Belgium"=0,"Brazil"=0,"Canada"=0,"Chile"=0,"Denmark"=0,"Spain"=0,"Finland"=0,"UK"=0,"Hungary"=0,"Italy"=0,
1471626239749:"Korea"=0,"Netherlands"=0,"Norway"=0,"Thailand"=0,"USA"=0)
1471626253406:which(x==names(result))
1471626279719:result = c("Australia"=0,"Austria"=0,"Belgium"=0,"Brazil"=0,"Canada"=0,"Chile"=0,"Denmark"=0,"Spain"=0,"Finland"=0,"UK"=0,"Hungary"=0,"Italy"=0,
1471626279724:"Korea"=0,"Netherlands"=0,"Norway"=0,"Thailand"=0,"USA"=0)
1471626279729:indx = which(x==names(result))
1471626279735:result[indx]=1
1471626282889:result
1471626531217:QQ
1471626554394:checkandconvert <- function(x) {
1471626554399:if (betaType[names(unlist(x))]=="continuous") {return (as.numeric(x))}
1471626554404:else if (betaType[names(unlist(x))]=="categorical") {
1471626554410:if (names(unlist(x))=="country") {
1471626554415:result = c("Australia"=0,"Austria"=0,"Belgium"=0,"Brazil"=0,"Canada"=0,"Chile"=0,"Denmark"=0,"Spain"=0,"Finland"=0,"UK"=0,"Hungary"=0,"Italy"=0,
1471626554420:"Korea"=0,"Netherlands"=0,"Norway"=0,"Thailand"=0,"USA"=0)
1471626554424:indx = which(x==names(result))
1471626554430:result[indx]=1
1471626554435:return(result)
1471626554440:} else {
1471626554446:if (x=="Yes") { return(as.numeric(1))
1471626554452:} else {
1471626554457:return(as.numeric(0))
1471626554461:}
1471626554467:}
1471626554472:}
1471626554476:}
1471626563547:indx
1471626566444:indx=1
1471626575029:QQ[indx]
1471626579174:unlist(lapply(QQ[indx], checkandconvert ))
1471626584343:QQ[indx]
1471626589256:QQ[indx] <- unlist(lapply(QQ[indx], checkandconvert ))
1471626597670:QQ
1471626602417:QQ[1]
1471626614525:QQ[[ i ]] <- eval(parse(text = paste("input$", names(betaType)[i], sep="")))
1471626614531:names(QQ[[ i ]]) <- names(betaType)[i]
1471626617289:QQ
1471626622298:i
1471626624594:i=1
1471626628075:QQ[[ i ]] <- eval(parse(text = paste("input$", names(betaType)[i], sep="")))
1471626628082:names(QQ[[ i ]]) <- names(betaType)[i]
1471626630599:QQ
1471626641763:QQ[indx]
1471626662169:QQ[indx] = c("rewrew"=5,"asdfa"=2)
1471626676849:QQ[[indx]] = c("rewrew"=5,"asdfa"=2)
1471626678696:qq
1471626680233:QQ
1471626711442:indx <- which(sapply(QQ, is.character))
1471626714284:indx
1471626721409:for(i in 1:length(betaType)){
1471626721414:QQ[[ i ]] <- eval(parse(text = paste("input$", names(betaType)[i], sep="")))
1471626721420:names(QQ[[ i ]]) <- names(betaType)[i]
1471626721424:}
1471626725164:cnames <- names(unlist(QQ))
1471626728378:cnames
1471626733253:indx <- which(sapply(QQ, is.character))
1471626735349:indx
1471626738968:unlist(lapply(QQ[indx], checkandconvert ))
1471626775120:names(x)
1471626778465:x
1471626794479:names(unlist(x))
1471626799708:c(names(unlist(x))=1)
1471626841624:c(eval(parse(text=(paste0(names(unlist(x)),'=1')))))
1471626850403:names(unlist(x))
1471626859370:eval(parse(text=(paste0(names(unlist(x)),'=1'))))
1471626873786:paste0(names(unlist(x)),'=1')
1471627192944:indx <- which(sapply(QQ, is.character))
1471627195929:QQ
1471627201181:indx
1471627209477:x = QQ[4]
1471627210055:x
1471627226369:(betaType[names(unlist(x))]=="continuous")
1471627231317:(betaType[names(unlist(x))]=="categorical")
1471627235822:(names(unlist(x))=="country")
1471627241777:(x=="Yes")
1471627247568:x
1471627253442:names(x)
1471627259906:names(unlist(x))
1471627283547:c(names(unlist(x))=1)
1471627325704:paste0(names(unlist(x)),'=1')
1471627343587:paste0('c(',names(unlist(x)),'=1)')
1471627369389:paste0('c("',names(unlist(x)),'"=1)')
1471627395216:result = eval(parse(text=paste0('c("',names(unlist(x)),'"=1)')))
1471627397138:result
1471627582577:checkandconvert <- function(x) {
1471627582583:if (betaType[names(unlist(x))]=="continuous") {return (as.numeric(x))}
1471627582588:else if (betaType[names(unlist(x))]=="categorical") {
1471627582595:if (names(unlist(x))=="country") {
1471627582600:result = c("Australia"=0,"Austria"=0,"Belgium"=0,"Brazil"=0,"Canada"=0,"Chile"=0,"Denmark"=0,"Spain"=0,"Finland"=0,"UK"=0,"Hungary"=0,"Italy"=0,
1471627582605:"Korea"=0,"Netherlands"=0,"Norway"=0,"Thailand"=0,"USA"=0)
1471627582610:indx = which(x==names(result))
1471627582614:result[indx]=1
1471627582619:return(result)
1471627582623:} else {
1471627582627:if (x=="Yes") {
1471627582631:result = eval(parse(text=paste0('c("',names(unlist(x)),'"=1)')))
1471627582636:return(result)
1471627582640:} else {
1471627582644:result = eval(parse(text=paste0('c("',names(unlist(x)),'"=0)')))
1471627582648:return(result)
1471627582653:}
1471627582658:}
1471627582662:}
1471627582667:}
1471627593768:QQ <- vector("list",length(betaType))
1471627593773:for(i in 1:length(betaType)){
1471627593781:QQ[[ i ]] <- eval(parse(text = paste("input$", names(betaType)[i], sep="")))
1471627593787:names(QQ[[ i ]]) <- names(betaType)[i]
1471627593791:}
1471627593798:cnames <- names(unlist(QQ))
1471627593802:indx <- which(sapply(QQ, is.character))
1471627600092:indx
1471627638543:for (z in 1:length(indx)){
1471627638550:QQ[[z]] <- unlist(lapply(QQ[indx], checkandconvert ))
1471627638557:}
1471627650175:QQ
1471627679307:QQ <- vector("list",length(betaType))
1471627679313:for(i in 1:length(betaType)){
1471627679319:QQ[[ i ]] <- eval(parse(text = paste("input$", names(betaType)[i], sep="")))
1471627679326:names(QQ[[ i ]]) <- names(betaType)[i]
1471627679330:}
1471627679337:cnames <- names(unlist(QQ))
1471627679343:indx <- which(sapply(QQ, is.character))
1471627679348:for (z in 1:length(indx)){
1471627679352:QQ[[z]] <- unlist(lapply(QQ[z], checkandconvert ))
1471627679357:}
1471627687046:QQ
1471627699775:indx
1471627704152:length(indx)
1471627711598:QQ <- vector("list",length(betaType))
1471627711604:for(i in 1:length(betaType)){
1471627711611:QQ[[ i ]] <- eval(parse(text = paste("input$", names(betaType)[i], sep="")))
1471627711617:names(QQ[[ i ]]) <- names(betaType)[i]
1471627711622:}
1471627711628:cnames <- names(unlist(QQ))
1471627711633:indx <- which(sapply(QQ, is.character))
1471627714744:QQ
1471627819024:for (z in 1:length(indx)){
1471627819032:print(z)
1471627819038:QQ[[z]] <- unlist(lapply(QQ[z], checkandconvert ))
1471627819043:}
1471627823345:QQ
1471627837665:QQ <- vector("list",length(betaType))
1471627837671:for(i in 1:length(betaType)){
1471627837679:QQ[[ i ]] <- eval(parse(text = paste("input$", names(betaType)[i], sep="")))
1471627837683:names(QQ[[ i ]]) <- names(betaType)[i]
1471627837688:}
1471627837694:cnames <- names(unlist(QQ))
1471627837699:indx <- which(sapply(QQ, is.character))
1471627840422:QQ
1471627885752:QQ <- vector("list",length(betaType))
1471627885758:for(i in 1:length(betaType)){
1471627885766:QQ[[ i ]] <- eval(parse(text = paste("input$", names(betaType)[i], sep="")))
1471627885771:names(QQ[[ i ]]) <- names(betaType)[i]
1471627885775:}
1471627885783:cnames <- names(unlist(QQ))
1471627885788:indx <- which(sapply(QQ, is.character))
1471627885793:for (z in 1:length(indx)){
1471627885797:QQ[[indx[z]]] <- unlist(lapply(QQ[indx[z]], checkandconvert ))
1471627885801:}
1471627888451:QQ
1471627950006:unlist(QQ)
1471627962753:data.frame(unlist(QQ))
1471627986195:unlist(QQ)
1471627990366:typeof(unlist(QQ))
1471628035081:as.data.frame(unlist(QQ))
1471628078716:test1 <- list( c(a='a',b='b',c='c'), c(a='d',b='e',c='f'))
1471628079983:test1
1471628095606:unlist(QQ)
1471628105748:c(unlist(QQ))
1471628113719:list(c(unlist(QQ)))
1471628123153:as.data.frame(list(c(unlist(QQ))))
1471628146290:unlist(QQ)
1471628175694:a <- unlist(QQ)
1471628177758:a
1471628209161:sapply(a,print)
1471628238188:data.frame(as.list(a),stringsAsFactors=F)
1471628275262:referencePoints <- c("country"=0,"age"=60,"sbp"=120,"hxhf"=0,"ckd"=0,"sbp"=120,"ap"=0)
1471628275267:betaType <- c("country"="categorical","age"="continuous","sbp"="continuous","hxhf"="categorical","ckd"="categorical","ap"="categorical")
1471628275273:betas <- c("age"=0.03752473,"Australia"=-0.218473958,"Austria"=0.159933164,"Belgium"=-0.418820175,"Brazil"=-0.489144157,"Canada"=-1.005531926,"Chile"=0.041576453,
1471628275280:"Denmark"=-0.260201289,"Spain"=-0.560461262,"Finland"=0.410690944,"UK"=-0.525918093,"Hungary"=-0.564631916,"Italy"=-0.58668433,"Korea"=-0.234378602,
1471628275285:"Netherlands"=0.174333537,"Norway"=0.42991423,"Thailand"=-0.497083762,"USA"=0,"hxhf"=0.8810468,"ckd"=0.658942324,"sbp"=0.00623828,"ap"=0.517418301)
1471628275291:upper = c("age"=105,"sbp"=270,"dpb"=180)
1471628275296:lower = c("age"=18,"sbp"=40,"dbp"=26)
1471628275303:time <- c(0,3,4,5,6,9,10,11,12,13,15,18,20,21,23,24,30,31,32,34,35,36,39,40,46,49,51,52,54,56,57,59,63,65,69,70,71,72,74,75,78,80,84,85,88,89,90,93,98,99,101,102,104,108,
1471628275307:109,110,111,113,114,115,119,120,122,124,125,126,131,137,138,148,152,154,157,158,159,161,162,163,164,166,168,171,175,182,184,187,188,192,193,196,198,205,206,212,
1471628275312:214,216,219,222,223,228,229,231,232,235,236,244,246,247,250,258,260,261,262,268,271,272,273,276,280,282,283,284,285,291,295,296,298,301,303,305,307,313,314,317,
1471628275319:320,323,330,334,335,338,342,352,353,355,356,357,359,360,361)
1471628275326:cumHazard <- c(1,0.999956967,0.999913915,0.999870835,0.999827747,0.99978462,0.99965514,0.999611955,0.999525582,0.999395932,0.999352678,0.999309374,0.99926605,0.99917939,
1471628275332:0.999092583,0.999049162,0.998962165,0.998918657,0.998875143,0.998831617,0.998788065,0.998744491,0.99870087,0.99865721,0.998569806,0.998526073,0.998482325,
1471628275338:0.998394832,0.998351065,0.998307297,0.998263501,0.998219678,0.998175827,0.998088067,0.998044174,0.997956345,0.997868499,0.997824543,0.997780558,0.99773657,
1471628275344:0.997648516,0.997560406,0.997516296,0.997428042,0.997383838,0.997339622,0.997295377,0.997251098,0.997162297,0.997073466,0.99698457,0.996940099,0.996895594,
1471628275350:0.996850999,0.996806358,0.996761684,0.996716975,0.996672216,0.996627398,0.996582559,0.996537539,0.99644739,0.996356901,0.996311357,0.996265713,0.99622004,
1471628275358:0.996174241,0.996128343,0.99608242,0.996036377,0.99599031,0.995944212,0.99585197,0.995805832,0.995759688,0.995667348,0.995621171,0.995482586,0.995436376,
1471628275363:0.995343877,0.995297613,0.995251304,0.995204946,0.99515854,0.995112116,0.995065681,0.995019244,0.994972782,0.99487986,0.99483336,0.994786846,0.994740173,
1471628275368:0.994646747,0.994599723,0.994505472,0.994458172,0.994363259,0.994315669,0.994268021,0.994220044,0.994123875,0.994075544,0.993978703,0.993929955,0.993881137,
1471628275374:0.993831233,0.993780456,0.993729109,0.99367771,0.993574539,0.993522899,0.993471247,0.993419568,0.993367791,0.993315988,0.993212372,0.993160524,0.99310856,
1471628275380:0.993056507,0.993004438,0.99295237,0.992900278,0.992848173,0.992796009,0.992691628,0.992587202,0.992534977,0.99248272,0.992430438,0.992378156,0.992325818,
1471628275386:0.992273399,0.992220962,0.992168495,0.992116026,0.992063545,0.991957917,0.991904797,0.991851599,0.991798146,0.991744251,0.991689318,0.991634134,0.991523409,
1471628275391:0.99146796,0.991356793,0.991300902,0.991244751,0.991188261)
1471628281748:checkandconvert <- function(x) {
1471628281753:if (betaType[names(unlist(x))]=="continuous") {return (as.numeric(x))}
1471628281758:else if (betaType[names(unlist(x))]=="categorical") {
1471628281765:if (names(unlist(x))=="country") {
1471628281770:result = c("Australia"=0,"Austria"=0,"Belgium"=0,"Brazil"=0,"Canada"=0,"Chile"=0,"Denmark"=0,"Spain"=0,"Finland"=0,"UK"=0,"Hungary"=0,"Italy"=0,
1471628281777:"Korea"=0,"Netherlands"=0,"Norway"=0,"Thailand"=0,"USA"=0)
1471628281783:indx = which(x==names(result))
1471628281788:result[indx]=1
1471628281794:return(result)
1471628281799:} else {
1471628281804:if (x=="Yes") {
1471628281810:result = eval(parse(text=paste0('c("',names(unlist(x)),'"=1)')))
1471628281815:return(result)
1471628281820:} else {
1471628281824:result = eval(parse(text=paste0('c("',names(unlist(x)),'"=0)')))
1471628281830:return(result)
1471628281835:}
1471628281840:}
1471628281844:}
1471628281850:}
1471628301875:input <- list(age=60,hxhf="Yes",ap="No",sbp=140,country="UK",ckd="No")
1471628310777:QQ <- vector("list",length(betaType))
1471628310782:for(i in 1:length(betaType)){
1471628310787:QQ[[ i ]] <- eval(parse(text = paste("input$", names(betaType)[i], sep="")))
1471628310793:names(QQ[[ i ]]) <- names(betaType)[i]
1471628310797:}
1471628310806:cnames <- names(unlist(QQ))
1471628310811:indx <- which(sapply(QQ, is.character))
1471628310817:for (z in 1:length(indx)){
1471628310822:QQ[[indx[z]]] <- unlist(lapply(QQ[indx[z]], checkandconvert ))
1471628310827:}
1471628314241:a <- unlist(QQ)
1471628314245:b <- data.frame(as.list(a),stringsAsFactors=F)
1471628316627:b
1471628366056:cnames
1471628394227:QQ
1471628396076:a
1471628401036:a["USA"]
1471628408685:length(a)
1471628432127:length(a)
1471628446392:zaz=1
1471628465691:zaz=19
1471628493327:a[zaz]
1471628508982:x = a[zaz]
1471628510520:x
1471628549827:names(x)
1471628660629:a[zaz]
1471628668871:a[zaz]=120
1471628671286:a[zaz]
1471628688550:QQ <- vector("list",length(betaType))
1471628688556:for(i in 1:length(betaType)){
1471628688561:QQ[[ i ]] <- eval(parse(text = paste("input$", names(betaType)[i], sep="")))
1471628688567:names(QQ[[ i ]]) <- names(betaType)[i]
1471628688572:}
1471628688581:cnames <- names(unlist(QQ))
1471628688586:indx <- which(sapply(QQ, is.character))
1471628688591:for (z in 1:length(indx)){
1471628688596:QQ[[indx[z]]] <- unlist(lapply(QQ[indx[z]], checkandconvert ))
1471628688602:}
1471628688609:a <- unlist(QQ)
1471628690759:a
1471628698168:for (zaz in 1:length(a)) {
1471628698173:a[zaz] = applyTransformations(a[zaz])
1471628698180:}
1471628702321:applyTransformations <- function(x) {
1471628702326:if (names(x)=="sbp") {
1471628702333:if (x < 120) {
1471628702338:return(120)
1471628702342:} else {
1471628702346:return(x)
1471628702350:}
1471628702353:}
1471628702358:}
1471628706706:for (zaz in 1:length(a)) {
1471628706711:a[zaz] = applyTransformations(a[zaz])
1471628706718:}
1471628721404:a
1471628736774:zaz=1
1471628743494:applyTransformations(a[zaz])
1471628768086:applyTransformations <- function(x) {
1471628768092:if (names(x)=="sbp") {
1471628768101:if (x < 120) {
1471628768105:return(120)
1471628768110:} else {
1471628768118:return(x)
1471628768123:}
1471628768128:} else {
1471628768133:return(x)
1471628768139:}
1471628768144:}
1471628775050:a <- unlist(QQ)
1471628775058:for (zaz in 1:length(a)) {
1471628775064:a[zaz] = applyTransformations(a[zaz])
1471628775072:}
1471628777504:a
1471628786079:input <- list(age=60,hxhf="Yes",ap="No",sbp=2,country="UK",ckd="No")
1471628790567:QQ <- vector("list",length(betaType))
1471628790577:for(i in 1:length(betaType)){
1471628790583:QQ[[ i ]] <- eval(parse(text = paste("input$", names(betaType)[i], sep="")))
1471628790588:names(QQ[[ i ]]) <- names(betaType)[i]
1471628790594:}
1471628790601:cnames <- names(unlist(QQ))
1471628790607:indx <- which(sapply(QQ, is.character))
1471628790612:for (z in 1:length(indx)){
1471628790620:QQ[[indx[z]]] <- unlist(lapply(QQ[indx[z]], checkandconvert ))
1471628790625:}
1471628790632:a <- unlist(QQ)
1471628792638:a
1471628797679:for (zaz in 1:length(a)) {
1471628797686:a[zaz] = applyTransformations(a[zaz])
1471628797694:}
1471628800163:a
1471628806741:b <- data.frame(as.list(a),stringsAsFactors=F)
1471628809325:b
1471628852083:b
1471628863946:QQ <- function{return(b)}
1471628878266:QQ <- function(){return(b)}
1471628880026:QQ()
1471628884115:c                 <- QQ()
1471628921751:same              <- intersect(names(c),names(betas))
1471628933913:referencePoints <- c("country"=0,"age"=60,"sbp"=120,"hxhf"=0,"ckd"=0,"sbp"=120,"ap"=0)
1471628942771:same2             <- intersect(names(c),names(referencePoints))
1471628945138:same
1471628955612:length(same)
1471628968163:length(a)
1471629109170:same2
1471629117851:c[same])
1471629122012:as.matrix(c[same])
1471629134315:betas[same]
1471629142487:t(as.matrix(betas[same]))
1471629510703:same
1471629518723:same2
1471629530182:referencePoints[same2]
1471629565471:c
1471629567642:length(c)
1471629591674:c[1]
1471629597681:names(c[1])
1471629633077:(names(c[i]) %in% (same2))
1471629641233:i=19
1471629645728:(names(c[i]) %in% (same2))
1471629688275:c[i]
1471629714646:names(c[i])
1471629732479:namez = names(c[i])
1471629735874:namez
1471629742651:c[namez]
1471629756493:c[namez] - referencePoints[namez]
1471629766916:c[i] = c[namez] - referencePoints[namez]
1471629769625:c
1471629779803:referencePoints
1471629790805:for (i in (1:length(c))) {
1471629790811:if (names(c[i]) %in% (same2)) {
1471629790818:namez = names(c[i])
1471629790823:c[i] = c[namez] - referencePoints[namez]
1471629790829:}
1471629790844:}
1471629793455:c
1471629811140:c                 <- QQ()
1471629811146:#######################################################################
1471629811152:#MANUALLY CUREATE TRANSFORMASTIONS HERE (DON"T KNOW HOW TO DO THIS YET)
1471629811158:#######################################################################
1471629811161:same              <- intersect(names(c),names(betas))
1471629811168:same2             <- intersect(names(c),names(referencePoints))
1471629811175:for (i in (1:length(c))) {
1471629811182:if (names(c[i]) %in% (same2)) {
1471629811187:namez = names(c[i])
1471629811192:c[i] = c[namez] - referencePoints[namez]
1471629811198:}
1471629811202:}
1471629813841:c
1471629825035:r                 <- as.matrix(c[same])                 %*% t(as.matrix(betas[same]))
1471629829159:as.matrix(c[same])
1471629833270:t(as.matrix(betas[same]))
1471629844164:as.matrix(c[same])                 %*% t(as.matrix(betas[same]))
1471629858861:as.matrix(c[same])
1471629867415:length(as.matrix(c[same]))
1471629877719:length( t(as.matrix(betas[same])))
1471630080717:c[same]
1471630101125:c[same]%*%betas[same]
1471630120552:as.matrix(c[same])%*%t(as.matrix(betas[same]))
1471630185701:dim(as.matrix(c[same]))
1471630195438:dim(t(as.matrix(betas[same])))
1471630209072:dim((as.matrix(betas[same])))
1471630213778:as.matrix(c[same])%*%(as.matrix(betas[same]))
1471630222154:r                 <- as.matrix(c[same])%*%(as.matrix(betas[same]))
1471630222162:S_t               <- cumHazard*exp(r)
1471630226432:S_t
1471630242747:as.matrix(c[same])
1471630249348:(as.matrix(betas[same]))
1471630259174:cumHazard
1471630379885:input <- list(age=70,hxhf="Yes",ap="No",sbp=55,country="USA",ckd="Yes")
1471630388432:QQ <- vector("list",length(betaType))
1471630388437:for(i in 1:length(betaType)){
1471630388442:QQ[[ i ]] <- eval(parse(text = paste("input$", names(betaType)[i], sep="")))
1471630388449:names(QQ[[ i ]]) <- names(betaType)[i]
1471630388453:}
1471630388459:cnames <- names(unlist(QQ))
1471630388465:indx <- which(sapply(QQ, is.character))
1471630388470:for (z in 1:length(indx)){
1471630388474:QQ[[indx[z]]] <- unlist(lapply(QQ[indx[z]], checkandconvert ))
1471630388479:}
1471630388484:a <- unlist(QQ)
1471630388490:for (zaz in 1:length(a)) {
1471630388495:a[zaz] = applyTransformations(a[zaz])
1471630388499:}
1471630388505:b <- data.frame(as.list(a),stringsAsFactors=F)
1471630393393:b
1471630421386:QQ <- function(){return(b)}
1471630422760:QQ()
1471630428001:c                 <- QQ()
1471630429841:c
1471630436133:same              <- intersect(names(c),names(betas))
1471630436138:same2             <- intersect(names(c),names(referencePoints))
1471630436142:for (i in (1:length(c))) {
1471630436148:if (names(c[i]) %in% (same2)) {
1471630436154:namez = names(c[i])
1471630436158:c[i] = c[namez] - referencePoints[namez]
1471630436163:}
1471630436168:}
1471630438815:c
1471630488604:r                 <- as.matrix(c[same])%*%(as.matrix(betas[same]))
1471630490885:r
1471630533439:r
1471630551696:baseHaz <- c(1,0.999956967,0.999913915,0.999870835,0.999827747,0.99978462,0.99965514,0.999611955,0.999525582,0.999395932,0.999352678,0.999309374,0.99926605,0.99917939,
1471630551702:0.999092583,0.999049162,0.998962165,0.998918657,0.998875143,0.998831617,0.998788065,0.998744491,0.99870087,0.99865721,0.998569806,0.998526073,0.998482325,
1471630551708:0.998394832,0.998351065,0.998307297,0.998263501,0.998219678,0.998175827,0.998088067,0.998044174,0.997956345,0.997868499,0.997824543,0.997780558,0.99773657,
1471630551714:0.997648516,0.997560406,0.997516296,0.997428042,0.997383838,0.997339622,0.997295377,0.997251098,0.997162297,0.997073466,0.99698457,0.996940099,0.996895594,
1471630551718:0.996850999,0.996806358,0.996761684,0.996716975,0.996672216,0.996627398,0.996582559,0.996537539,0.99644739,0.996356901,0.996311357,0.996265713,0.99622004,
1471630551723:0.996174241,0.996128343,0.99608242,0.996036377,0.99599031,0.995944212,0.99585197,0.995805832,0.995759688,0.995667348,0.995621171,0.995482586,0.995436376,
1471630551728:0.995343877,0.995297613,0.995251304,0.995204946,0.99515854,0.995112116,0.995065681,0.995019244,0.994972782,0.99487986,0.99483336,0.994786846,0.994740173,
1471630551731:0.994646747,0.994599723,0.994505472,0.994458172,0.994363259,0.994315669,0.994268021,0.994220044,0.994123875,0.994075544,0.993978703,0.993929955,0.993881137,
1471630551735:0.993831233,0.993780456,0.993729109,0.99367771,0.993574539,0.993522899,0.993471247,0.993419568,0.993367791,0.993315988,0.993212372,0.993160524,0.99310856,
1471630551739:0.993056507,0.993004438,0.99295237,0.992900278,0.992848173,0.992796009,0.992691628,0.992587202,0.992534977,0.99248272,0.992430438,0.992378156,0.992325818,
1471630551743:0.992273399,0.992220962,0.992168495,0.992116026,0.992063545,0.991957917,0.991904797,0.991851599,0.991798146,0.991744251,0.991689318,0.991634134,0.991523409,
1471630551747:0.99146796,0.991356793,0.991300902,0.991244751,0.991188261)
1471630564719:r                 <- as.matrix(c[same])%*%(as.matrix(betas[same]))
1471630564726:S_t               <- baseHaz*exp(r)
1471630567068:S_t
1471630573909:1-S_t
1471630583557:exp(r)
1471630587012:r
1471630634716:runApp()
1471630748788:referencePoints <- c("country"=0,"age"=60,"sbp"=120,"hxhf"=0,"ckd"=0,"sbp"=120,"ap"=0)
1471630748793:betaType <- c("country"="categorical","age"="continuous","sbp"="continuous","hxhf"="categorical","ckd"="categorical","ap"="categorical")
1471630748799:betas <- c("age"=0.03752473,"Australia"=-0.218473958,"Austria"=0.159933164,"Belgium"=-0.418820175,"Brazil"=-0.489144157,"Canada"=-1.005531926,"Chile"=0.041576453,
1471630748804:"Denmark"=-0.260201289,"Spain"=-0.560461262,"Finland"=0.410690944,"UK"=-0.525918093,"Hungary"=-0.564631916,"Italy"=-0.58668433,"Korea"=-0.234378602,
1471630748810:"Netherlands"=0.174333537,"Norway"=0.42991423,"Thailand"=-0.497083762,"USA"=0,"hxhf"=0.8810468,"ckd"=0.658942324,"sbp"=0.00623828,"ap"=0.517418301)
1471630748815:upper = c("age"=105,"sbp"=270,"dpb"=180)
1471630748820:lower = c("age"=18,"sbp"=40,"dbp"=26)
1471630748828:time <- c(0,3,4,5,6,9,10,11,12,13,15,18,20,21,23,24,30,31,32,34,35,36,39,40,46,49,51,52,54,56,57,59,63,65,69,70,71,72,74,75,78,80,84,85,88,89,90,93,98,99,101,102,104,108,
1471630748834:109,110,111,113,114,115,119,120,122,124,125,126,131,137,138,148,152,154,157,158,159,161,162,163,164,166,168,171,175,182,184,187,188,192,193,196,198,205,206,212,
1471630748839:214,216,219,222,223,228,229,231,232,235,236,244,246,247,250,258,260,261,262,268,271,272,273,276,280,282,283,284,285,291,295,296,298,301,303,305,307,313,314,317,
1471630748844:320,323,330,334,335,338,342,352,353,355,356,357,359,360,361)
1471630748850:baseHaz <- c(1,0.999956967,0.999913915,0.999870835,0.999827747,0.99978462,0.99965514,0.999611955,0.999525582,0.999395932,0.999352678,0.999309374,0.99926605,0.99917939,
1471630748855:0.999092583,0.999049162,0.998962165,0.998918657,0.998875143,0.998831617,0.998788065,0.998744491,0.99870087,0.99865721,0.998569806,0.998526073,0.998482325,
1471630748860:0.998394832,0.998351065,0.998307297,0.998263501,0.998219678,0.998175827,0.998088067,0.998044174,0.997956345,0.997868499,0.997824543,0.997780558,0.99773657,
1471630748866:0.997648516,0.997560406,0.997516296,0.997428042,0.997383838,0.997339622,0.997295377,0.997251098,0.997162297,0.997073466,0.99698457,0.996940099,0.996895594,
1471630748871:0.996850999,0.996806358,0.996761684,0.996716975,0.996672216,0.996627398,0.996582559,0.996537539,0.99644739,0.996356901,0.996311357,0.996265713,0.99622004,
1471630748876:0.996174241,0.996128343,0.99608242,0.996036377,0.99599031,0.995944212,0.99585197,0.995805832,0.995759688,0.995667348,0.995621171,0.995482586,0.995436376,
1471630748880:0.995343877,0.995297613,0.995251304,0.995204946,0.99515854,0.995112116,0.995065681,0.995019244,0.994972782,0.99487986,0.99483336,0.994786846,0.994740173,
1471630748885:0.994646747,0.994599723,0.994505472,0.994458172,0.994363259,0.994315669,0.994268021,0.994220044,0.994123875,0.994075544,0.993978703,0.993929955,0.993881137,
1471630748890:0.993831233,0.993780456,0.993729109,0.99367771,0.993574539,0.993522899,0.993471247,0.993419568,0.993367791,0.993315988,0.993212372,0.993160524,0.99310856,
1471630748895:0.993056507,0.993004438,0.99295237,0.992900278,0.992848173,0.992796009,0.992691628,0.992587202,0.992534977,0.99248272,0.992430438,0.992378156,0.992325818,
1471630748899:0.992273399,0.992220962,0.992168495,0.992116026,0.992063545,0.991957917,0.991904797,0.991851599,0.991798146,0.991744251,0.991689318,0.991634134,0.991523409,
1471630748904:0.99146796,0.991356793,0.991300902,0.991244751,0.991188261)
1471630748910:input <- list(age=70,hxhf="Yes",ap="No",sbp=130,country="USA",ckd="Yes")
1471630798553:checkandconvert <- function(x) {
1471630798558:if (betaType[names(unlist(x))]=="continuous") {return (as.numeric(x))}
1471630798563:else if (betaType[names(unlist(x))]=="categorical") {
1471630798572:if (names(unlist(x))=="country") {
1471630798578:result = c("Australia"=0,"Austria"=0,"Belgium"=0,"Brazil"=0,"Canada"=0,"Chile"=0,"Denmark"=0,"Spain"=0,"Finland"=0,"UK"=0,"Hungary"=0,"Italy"=0,
1471630798584:"Korea"=0,"Netherlands"=0,"Norway"=0,"Thailand"=0,"USA"=0)
1471630798592:indx = which(x==names(result))
1471630798597:result[indx]=1
1471630798608:return(result)
1471630798619:} else {
1471630798626:if (x=="Yes") {
1471630798632:result = eval(parse(text=paste0('c("',names(unlist(x)),'"=1)')))
1471630798637:return(result)
1471630798643:} else {
1471630798649:result = eval(parse(text=paste0('c("',names(unlist(x)),'"=0)')))
1471630798660:return(result)
1471630798681:}
1471630798686:}
1471630798691:}
1471630798696:}
1471630798706:QQ <- vector("list",length(betaType))
1471630798715:for(i in 1:length(betaType)){
1471630798729:QQ[[ i ]] <- eval(parse(text = paste("input$", names(betaType)[i], sep="")))
1471630798741:names(QQ[[ i ]]) <- names(betaType)[i]
1471630798746:}
1471630798768:cnames <- names(unlist(QQ))
1471630798774:indx <- which(sapply(QQ, is.character))
1471630798778:for (z in 1:length(indx)){
1471630798808:QQ[[indx[z]]] <- unlist(lapply(QQ[indx[z]], checkandconvert ))
1471630798819:}
1471630798829:a <- unlist(QQ)
1471630805972:a
1471630987646:################
1471630987653:# Function needed below, but doesn't need review
1471630987657:################
1471630987662:checkandconvert <- function(x) {
1471630987668:if (betaType[names(unlist(x))]=="continuous") {return (as.numeric(x))}
1471630987672:else if (betaType[names(unlist(x))]=="categorical") {
1471630987677:if (names(unlist(x))=="country") {
1471630987682:result = c("Australia"=0,"Austria"=0,"Belgium"=0,"Brazil"=0,"Canada"=0,"Chile"=0,"Denmark"=0,"Spain"=0,"Finland"=0,"UK"=0,"Hungary"=0,"Italy"=0,
1471630987687:"Korea"=0,"Netherlands"=0,"Norway"=0,"Thailand"=0,"USA"=0)
1471630987691:indx = which(x==names(result))
1471630987696:result[indx]=1
1471630987701:return(result)
1471630987705:} else {
1471630987710:if (x=="Yes") {
1471630987714:result = eval(parse(text=paste0('c("',names(unlist(x)),'"=1)')))
1471630987720:return(result)
1471630987724:} else {
1471630987729:result = eval(parse(text=paste0('c("',names(unlist(x)),'"=0)')))
1471630987733:return(result)
1471630987738:}
1471630987743:}
1471630987749:}
1471630987753:}
1471630987761:###########
1471630987766:# Metadata Received
1471630987774:###########
1471630987779:referencePoints <- c("country"=0,"age"=60,"sbp"=120,"hxhf"=0,"ckd"=0,"sbp"=120,"ap"=0)
1471630987783:betaType <- c("country"="categorical","age"="continuous","sbp"="continuous","hxhf"="categorical","ckd"="categorical","ap"="categorical")
1471630987789:betas <- c("age"=0.03752473,"Australia"=-0.218473958,"Austria"=0.159933164,"Belgium"=-0.418820175,"Brazil"=-0.489144157,"Canada"=-1.005531926,"Chile"=0.041576453,
1471630987794:"Denmark"=-0.260201289,"Spain"=-0.560461262,"Finland"=0.410690944,"UK"=-0.525918093,"Hungary"=-0.564631916,"Italy"=-0.58668433,"Korea"=-0.234378602,
1471630987799:"Netherlands"=0.174333537,"Norway"=0.42991423,"Thailand"=-0.497083762,"USA"=0,"hxhf"=0.8810468,"ckd"=0.658942324,"sbp"=0.00623828,"ap"=0.517418301)
1471630987804:upper = c("age"=105,"sbp"=270,"dpb"=180)
1471630987809:lower = c("age"=18,"sbp"=40,"dbp"=26)
1471630987814:time <- c(0,3,4,5,6,9,10,11,12,13,15,18,20,21,23,24,30,31,32,34,35,36,39,40,46,49,51,52,54,56,57,59,63,65,69,70,71,72,74,75,78,80,84,85,88,89,90,93,98,99,101,102,104,108,
1471630987819:109,110,111,113,114,115,119,120,122,124,125,126,131,137,138,148,152,154,157,158,159,161,162,163,164,166,168,171,175,182,184,187,188,192,193,196,198,205,206,212,
1471630987824:214,216,219,222,223,228,229,231,232,235,236,244,246,247,250,258,260,261,262,268,271,272,273,276,280,282,283,284,285,291,295,296,298,301,303,305,307,313,314,317,
1471630987829:320,323,330,334,335,338,342,352,353,355,356,357,359,360,361)
1471630987834:baseHaz <- c(1,0.999956967,0.999913915,0.999870835,0.999827747,0.99978462,0.99965514,0.999611955,0.999525582,0.999395932,0.999352678,0.999309374,0.99926605,0.99917939,
1471630987839:0.999092583,0.999049162,0.998962165,0.998918657,0.998875143,0.998831617,0.998788065,0.998744491,0.99870087,0.99865721,0.998569806,0.998526073,0.998482325,
1471630987843:0.998394832,0.998351065,0.998307297,0.998263501,0.998219678,0.998175827,0.998088067,0.998044174,0.997956345,0.997868499,0.997824543,0.997780558,0.99773657,
1471630987848:0.997648516,0.997560406,0.997516296,0.997428042,0.997383838,0.997339622,0.997295377,0.997251098,0.997162297,0.997073466,0.99698457,0.996940099,0.996895594,
1471630987853:0.996850999,0.996806358,0.996761684,0.996716975,0.996672216,0.996627398,0.996582559,0.996537539,0.99644739,0.996356901,0.996311357,0.996265713,0.99622004,
1471630987858:0.996174241,0.996128343,0.99608242,0.996036377,0.99599031,0.995944212,0.99585197,0.995805832,0.995759688,0.995667348,0.995621171,0.995482586,0.995436376,
1471630987863:0.995343877,0.995297613,0.995251304,0.995204946,0.99515854,0.995112116,0.995065681,0.995019244,0.994972782,0.99487986,0.99483336,0.994786846,0.994740173,
1471630987868:0.994646747,0.994599723,0.994505472,0.994458172,0.994363259,0.994315669,0.994268021,0.994220044,0.994123875,0.994075544,0.993978703,0.993929955,0.993881137,
1471630987873:0.993831233,0.993780456,0.993729109,0.99367771,0.993574539,0.993522899,0.993471247,0.993419568,0.993367791,0.993315988,0.993212372,0.993160524,0.99310856,
1471630987878:0.993056507,0.993004438,0.99295237,0.992900278,0.992848173,0.992796009,0.992691628,0.992587202,0.992534977,0.99248272,0.992430438,0.992378156,0.992325818,
1471630987882:0.992273399,0.992220962,0.992168495,0.992116026,0.992063545,0.991957917,0.991904797,0.991851599,0.991798146,0.991744251,0.991689318,0.991634134,0.991523409,
1471630987888:0.99146796,0.991356793,0.991300902,0.991244751,0.991188261)
1471630987895:##############
1471630987900:# Pretend Patient
1471630987907:##############
1471630987912:input <- list(age=70,hxhf="Yes",ap="No",sbp=130,country="USA",ckd="Yes")
1471630987919:##############
1471630987923:# Convert UI input to a data set
1471630987928:##############
1471630987933:QQ <- vector("list",length(betaType))
1471630987939:for(i in 1:length(betaType)){
1471630987943:QQ[[ i ]] <- eval(parse(text = paste("input$", names(betaType)[i], sep="")))
1471630987948:names(QQ[[ i ]]) <- names(betaType)[i]
1471630987953:}
1471630987961:cnames <- names(unlist(QQ))
1471630987966:indx <- which(sapply(QQ, is.character))
1471630987970:for (z in 1:length(indx)){
1471630987975:QQ[[indx[z]]] <- unlist(lapply(QQ[indx[z]], checkandconvert ))
1471630987980:}
1471630987986:a <- unlist(QQ)
1471630987992:c                 <- a
1471630987997:#######################################################################
1471630988001:#Subtract the reference points from the user input
1471630988006:#######################################################################
1471630988012:same              <- intersect(names(c),names(betas))
1471630988017:same2             <- intersect(names(c),names(referencePoints))
1471630988023:for (i in (1:length(c))) {
1471630988029:if (names(c[i]) %in% (same2)) {
1471630988037:namez = names(c[i])
1471630988042:c[i] = c[namez] - referencePoints[namez]
1471630988047:}
1471630988053:}
1471630988059:# this calculation is done in accordance with the PMML Specification
1471630988064:r                 <- as.matrix(c[same])%*%(as.matrix(betas[same]))
1471630988071:S_t               <- baseHaz*exp(r)
1471630988076:C_t               <- 1-S_t
1471630988081:#Notice that C_t is not prob scale, something is amiss
1471630988087:print(C_t)
1471631008647:as.matrix(c[same])
1471631036761:b <- data.frame(as.list(a),stringsAsFactors=F)
1471631036772:c                 <- b
1471631040353:same              <- intersect(names(c),names(betas))
1471631040360:same2             <- intersect(names(c),names(referencePoints))
1471631040365:for (i in (1:length(c))) {
1471631040370:if (names(c[i]) %in% (same2)) {
1471631040376:namez = names(c[i])
1471631040381:c[i] = c[namez] - referencePoints[namez]
1471631040388:}
1471631040393:}
1471631040408:# this calculation is done in accordance with the PMML Specification
1471631040413:r                 <- as.matrix(c[same])%*%(as.matrix(betas[same]))
1471631040418:S_t               <- baseHaz*exp(r)
1471631040422:C_t               <- 1-S_t
1471631040427:#Notice that C_t is not prob scale, something is amiss
1471631040432:print(C_t)
1471631130203:c
1471631168578:same              <- intersect(names(c),names(betas))
1471631168583:same2             <- intersect(names(c),names(referencePoints))
1471631172369:c
1471631650289:c
1471631674540:c                 <- QQ()
1471631776521:referencePoints <- c("country"=0,"age"=60,"sbp"=120,"hxhf"=0,"ckd"=0,"sbp"=120,"ap"=0)
1471631776531:betaType <- c("country"="categorical","age"="continuous","sbp"="continuous","hxhf"="categorical","ckd"="categorical","ap"="categorical")
1471631776537:betas <- c("age"=0.03752473,"Australia"=-0.218473958,"Austria"=0.159933164,"Belgium"=-0.418820175,"Brazil"=-0.489144157,"Canada"=-1.005531926,"Chile"=0.041576453,
1471631776541:"Denmark"=-0.260201289,"Spain"=-0.560461262,"Finland"=0.410690944,"UK"=-0.525918093,"Hungary"=-0.564631916,"Italy"=-0.58668433,"Korea"=-0.234378602,
1471631776546:"Netherlands"=0.174333537,"Norway"=0.42991423,"Thailand"=-0.497083762,"USA"=0,"hxhf"=0.8810468,"ckd"=0.658942324,"sbp"=0.00623828,"ap"=0.517418301)
1471631776550:upper = c("age"=105,"sbp"=270,"dpb"=180)
1471631776556:lower = c("age"=18,"sbp"=40,"dbp"=26)
1471631776561:time <- c(0,3,4,5,6,9,10,11,12,13,15,18,20,21,23,24,30,31,32,34,35,36,39,40,46,49,51,52,54,56,57,59,63,65,69,70,71,72,74,75,78,80,84,85,88,89,90,93,98,99,101,102,104,108,
1471631776565:109,110,111,113,114,115,119,120,122,124,125,126,131,137,138,148,152,154,157,158,159,161,162,163,164,166,168,171,175,182,184,187,188,192,193,196,198,205,206,212,
1471631776569:214,216,219,222,223,228,229,231,232,235,236,244,246,247,250,258,260,261,262,268,271,272,273,276,280,282,283,284,285,291,295,296,298,301,303,305,307,313,314,317,
1471631776573:320,323,330,334,335,338,342,352,353,355,356,357,359,360,361)
1471631776578:baseHaz <- c(1,0.999956967,0.999913915,0.999870835,0.999827747,0.99978462,0.99965514,0.999611955,0.999525582,0.999395932,0.999352678,0.999309374,0.99926605,0.99917939,
1471631776582:0.999092583,0.999049162,0.998962165,0.998918657,0.998875143,0.998831617,0.998788065,0.998744491,0.99870087,0.99865721,0.998569806,0.998526073,0.998482325,
1471631776586:0.998394832,0.998351065,0.998307297,0.998263501,0.998219678,0.998175827,0.998088067,0.998044174,0.997956345,0.997868499,0.997824543,0.997780558,0.99773657,
1471631776590:0.997648516,0.997560406,0.997516296,0.997428042,0.997383838,0.997339622,0.997295377,0.997251098,0.997162297,0.997073466,0.99698457,0.996940099,0.996895594,
1471631776594:0.996850999,0.996806358,0.996761684,0.996716975,0.996672216,0.996627398,0.996582559,0.996537539,0.99644739,0.996356901,0.996311357,0.996265713,0.99622004,
1471631776599:0.996174241,0.996128343,0.99608242,0.996036377,0.99599031,0.995944212,0.99585197,0.995805832,0.995759688,0.995667348,0.995621171,0.995482586,0.995436376,
1471631776604:0.995343877,0.995297613,0.995251304,0.995204946,0.99515854,0.995112116,0.995065681,0.995019244,0.994972782,0.99487986,0.99483336,0.994786846,0.994740173,
1471631776608:0.994646747,0.994599723,0.994505472,0.994458172,0.994363259,0.994315669,0.994268021,0.994220044,0.994123875,0.994075544,0.993978703,0.993929955,0.993881137,
1471631776612:0.993831233,0.993780456,0.993729109,0.99367771,0.993574539,0.993522899,0.993471247,0.993419568,0.993367791,0.993315988,0.993212372,0.993160524,0.99310856,
1471631776620:0.993056507,0.993004438,0.99295237,0.992900278,0.992848173,0.992796009,0.992691628,0.992587202,0.992534977,0.99248272,0.992430438,0.992378156,0.992325818,
1471631776626:0.992273399,0.992220962,0.992168495,0.992116026,0.992063545,0.991957917,0.991904797,0.991851599,0.991798146,0.991744251,0.991689318,0.991634134,0.991523409,
1471631776633:0.99146796,0.991356793,0.991300902,0.991244751,0.991188261)
1471631796725:input <- list(age=70,hxhf="Yes",ap="No",sbp=130,country="USA",ckd="Yes")
1471631806046:QQ <- vector("list",length(betaType))
1471631806051:for(i in 1:length(betaType)){
1471631806059:QQ[[ i ]] <- eval(parse(text = paste("input$", names(betaType)[i], sep="")))
1471631806064:names(QQ[[ i ]]) <- names(betaType)[i]
1471631806069:}
1471631806080:cnames <- names(unlist(QQ))
1471631806084:indx <- which(sapply(QQ, is.character))
1471631806092:for (z in 1:length(indx)){
1471631806096:QQ[[indx[z]]] <- unlist(lapply(QQ[indx[z]], checkandconvert ))
1471631806101:}
1471631806107:a <- unlist(QQ)
1471631806111:for (zaz in 1:length(a)) {
1471631806116:a[zaz] = applyTransformations(a[zaz])
1471631806120:}
1471631806124:b <- data.frame(as.list(a),stringsAsFactors=F)
1471631814623:applyTransformations <- function(x) {
1471631814628:if (names(x)=="sbp") {
1471631814632:if (x < 120) {
1471631814638:return(120)
1471631814644:} else {
1471631814648:return(x)
1471631814652:}
1471631814658:} else {
1471631814663:return(x)
1471631814668:}
1471631814672:}
1471631814679:checkandconvert <- function(x) {
1471631814683:if (betaType[names(unlist(x))]=="continuous") {return (as.numeric(x))}
1471631814688:else if (betaType[names(unlist(x))]=="categorical") {
1471631814692:if (names(unlist(x))=="country") {
1471631814697:result = c("Australia"=0,"Austria"=0,"Belgium"=0,"Brazil"=0,"Canada"=0,"Chile"=0,"Denmark"=0,"Spain"=0,"Finland"=0,"UK"=0,"Hungary"=0,"Italy"=0,
1471631814702:"Korea"=0,"Netherlands"=0,"Norway"=0,"Thailand"=0,"USA"=0)
1471631814707:indx = which(x==names(result))
1471631814711:result[indx]=1
1471631814716:return(result)
1471631814720:} else {
1471631814724:if (x=="Yes") {
1471631814729:result = eval(parse(text=paste0('c("',names(unlist(x)),'"=1)')))
1471631814733:return(result)
1471631814739:} else {
1471631814743:result = eval(parse(text=paste0('c("',names(unlist(x)),'"=0)')))
1471631814748:return(result)
1471631814752:}
1471631814757:}
1471631814762:}
1471631814767:}
1471631820792:QQ <- vector("list",length(betaType))
1471631820798:for(i in 1:length(betaType)){
1471631820802:QQ[[ i ]] <- eval(parse(text = paste("input$", names(betaType)[i], sep="")))
1471631820806:names(QQ[[ i ]]) <- names(betaType)[i]
1471631820812:}
1471631820819:cnames <- names(unlist(QQ))
1471631820823:indx <- which(sapply(QQ, is.character))
1471631820829:for (z in 1:length(indx)){
1471631820834:QQ[[indx[z]]] <- unlist(lapply(QQ[indx[z]], checkandconvert ))
1471631820839:}
1471631820846:a <- unlist(QQ)
1471631820851:for (zaz in 1:length(a)) {
1471631820855:a[zaz] = applyTransformations(a[zaz])
1471631820860:}
1471631820864:b <- data.frame(as.list(a),stringsAsFactors=F)
1471631823712:b
1471631835317:QQ <- function(){return(b)}
1471631836651:QQ()
1471631842115:c                 <- QQ()
1471631845625:same              <- intersect(names(c),names(betas))
1471631845632:same2             <- intersect(names(c),names(referencePoints))
1471631884087:as.matrix(c[same])                 %*% t(as.matrix(betas[same]))
1471631894192:as.matrix(c[same])                 %*% (as.matrix(betas[same]))
1471631899761:as.matrix(referencePoints[same2])  %*% (as.matrix(betas[same2]))
1471631903551:referencePoints[same2]
1471631913998:as.matrix(referencePoints[same2])  %*% t(as.matrix(betas[same2]))
1471631918635:as.matrix(referencePoints[same2])
1471631934332:(as.matrix(betas[same2]))
1471631939962:t(as.matrix(referencePoints[same2]))  %*% (as.matrix(betas[same2]))
1471631952837:referencePoints[same2]
1471631958119:as.matrix(betas[same2])
1471631969019:r                 <- as.matrix(c[same])                 %*% (as.matrix(betas[same]))
1471631969025:s                 <- t(as.matrix(referencePoints[same2]))  %*% (as.matrix(betas[same2]))
1471631988858:S_t               <- baseHaz*exp(r-s)
1471631990722:S_t
1471632082636:################
1471632082642:# Function needed below, but doesn't need review
1471632082648:################
1471632082658:checkandconvert <- function(x) {
1471632082663:if (betaType[names(unlist(x))]=="continuous") {return (as.numeric(x))}
1471632082672:else if (betaType[names(unlist(x))]=="categorical") {
1471632082677:if (names(unlist(x))=="country") {
1471632082681:result = c("Australia"=0,"Austria"=0,"Belgium"=0,"Brazil"=0,"Canada"=0,"Chile"=0,"Denmark"=0,"Spain"=0,"Finland"=0,"UK"=0,"Hungary"=0,"Italy"=0,
1471632082689:"Korea"=0,"Netherlands"=0,"Norway"=0,"Thailand"=0,"USA"=0)
1471632082694:indx = which(x==names(result))
1471632082699:result[indx]=1
1471632082704:return(result)
1471632082711:} else {
1471632082716:if (x=="Yes") {
1471632082721:result = eval(parse(text=paste0('c("',names(unlist(x)),'"=1)')))
1471632082740:return(result)
1471632082744:} else {
1471632082748:result = eval(parse(text=paste0('c("',names(unlist(x)),'"=0)')))
1471632082753:return(result)
1471632082758:}
1471632082762:}
1471632082771:}
1471632082775:}
1471632082784:###########################
1471632082792:# Start Review Here
1471632082801:# Metadata Received
1471632082814:###########################
1471632082827:referencePoints <- c("country"=0,"age"=60,"sbp"=120,"hxhf"=0,"ckd"=0,"sbp"=120,"ap"=0)
1471632082832:betaType <- c("country"="categorical","age"="continuous","sbp"="continuous","hxhf"="categorical","ckd"="categorical","ap"="categorical")
1471632082836:betas <- c("age"=0.03752473,"Australia"=-0.218473958,"Austria"=0.159933164,"Belgium"=-0.418820175,"Brazil"=-0.489144157,"Canada"=-1.005531926,"Chile"=0.041576453,
1471632082850:"Denmark"=-0.260201289,"Spain"=-0.560461262,"Finland"=0.410690944,"UK"=-0.525918093,"Hungary"=-0.564631916,"Italy"=-0.58668433,"Korea"=-0.234378602,
1471632082854:"Netherlands"=0.174333537,"Norway"=0.42991423,"Thailand"=-0.497083762,"USA"=0,"hxhf"=0.8810468,"ckd"=0.658942324,"sbp"=0.00623828,"ap"=0.517418301)
1471632082863:upper = c("age"=105,"sbp"=270,"dpb"=180)
1471632082877:lower = c("age"=18,"sbp"=40,"dbp"=26)
1471632082895:time <- c(0,3,4,5,6,9,10,11,12,13,15,18,20,21,23,24,30,31,32,34,35,36,39,40,46,49,51,52,54,56,57,59,63,65,69,70,71,72,74,75,78,80,84,85,88,89,90,93,98,99,101,102,104,108,
1471632082910:109,110,111,113,114,115,119,120,122,124,125,126,131,137,138,148,152,154,157,158,159,161,162,163,164,166,168,171,175,182,184,187,188,192,193,196,198,205,206,212,
1471632082927:214,216,219,222,223,228,229,231,232,235,236,244,246,247,250,258,260,261,262,268,271,272,273,276,280,282,283,284,285,291,295,296,298,301,303,305,307,313,314,317,
1471632082942:320,323,330,334,335,338,342,352,353,355,356,357,359,360,361)
1471632082955:baseHaz <- c(1,0.999956967,0.999913915,0.999870835,0.999827747,0.99978462,0.99965514,0.999611955,0.999525582,0.999395932,0.999352678,0.999309374,0.99926605,0.99917939,
1471632082972:0.999092583,0.999049162,0.998962165,0.998918657,0.998875143,0.998831617,0.998788065,0.998744491,0.99870087,0.99865721,0.998569806,0.998526073,0.998482325,
1471632082983:0.998394832,0.998351065,0.998307297,0.998263501,0.998219678,0.998175827,0.998088067,0.998044174,0.997956345,0.997868499,0.997824543,0.997780558,0.99773657,
1471632082995:0.997648516,0.997560406,0.997516296,0.997428042,0.997383838,0.997339622,0.997295377,0.997251098,0.997162297,0.997073466,0.99698457,0.996940099,0.996895594,
1471632083001:0.996850999,0.996806358,0.996761684,0.996716975,0.996672216,0.996627398,0.996582559,0.996537539,0.99644739,0.996356901,0.996311357,0.996265713,0.99622004,
1471632083008:0.996174241,0.996128343,0.99608242,0.996036377,0.99599031,0.995944212,0.99585197,0.995805832,0.995759688,0.995667348,0.995621171,0.995482586,0.995436376,
1471632083012:0.995343877,0.995297613,0.995251304,0.995204946,0.99515854,0.995112116,0.995065681,0.995019244,0.994972782,0.99487986,0.99483336,0.994786846,0.994740173,
1471632083017:0.994646747,0.994599723,0.994505472,0.994458172,0.994363259,0.994315669,0.994268021,0.994220044,0.994123875,0.994075544,0.993978703,0.993929955,0.993881137,
1471632083021:0.993831233,0.993780456,0.993729109,0.99367771,0.993574539,0.993522899,0.993471247,0.993419568,0.993367791,0.993315988,0.993212372,0.993160524,0.99310856,
1471632083028:0.993056507,0.993004438,0.99295237,0.992900278,0.992848173,0.992796009,0.992691628,0.992587202,0.992534977,0.99248272,0.992430438,0.992378156,0.992325818,
1471632083039:0.992273399,0.992220962,0.992168495,0.992116026,0.992063545,0.991957917,0.991904797,0.991851599,0.991798146,0.991744251,0.991689318,0.991634134,0.991523409,
1471632083062:0.99146796,0.991356793,0.991300902,0.991244751,0.991188261)
1471632083080:##############
1471632083087:# Pretend Patient
1471632083091:##############
1471632083096:input <- list(age=70,hxhf="Yes",ap="No",sbp=130,country="USA",ckd="Yes")
1471632083102:##############
1471632083107:# Convert UI input to a data set
1471632083111:##############
1471632083116:QQ <- vector("list",length(betaType))
1471632083122:for(i in 1:length(betaType)){
1471632083128:QQ[[ i ]] <- eval(parse(text = paste("input$", names(betaType)[i], sep="")))
1471632083132:names(QQ[[ i ]]) <- names(betaType)[i]
1471632083152:}
1471632083168:cnames <- names(unlist(QQ))
1471632083183:indx <- which(sapply(QQ, is.character))
1471632083207:for (z in 1:length(indx)){
1471632083218:QQ[[indx[z]]] <- unlist(lapply(QQ[indx[z]], checkandconvert ))
1471632083222:}
1471632083236:a <- unlist(QQ)
1471632083244:b <- data.frame(as.list(a),stringsAsFactors=F)
1471632083264:#c is the final data set that should be matrix multiplie against betas
1471632083280:c                 <- b
1471632083289:print('user input data.frame as input into UI: ')
1471632083298:print(c)
1471632083358:#######################################################################
1471632083364:#Subtract the reference points from the user input
1471632083373:#######################################################################
1471632083383:same              <- intersect(names(c),names(betas))
1471632083392:same2             <- intersect(names(c),names(referencePoints))
1471632083400:# this calculation is done in accordance with the PMML Specification
1471632083410:r                 <- as.matrix(c[same])                 %*% (as.matrix(betas[same]))
1471632083419:s                 <- t(as.matrix(referencePoints[same2]))  %*% (as.matrix(betas[same2]))
1471632083424:S_t               <- baseHaz*exp(r-s)
1471632083432:#S_t               <- exp(-H_t)
1471632083441:C_t               <- 1-S_t
1471632083459:#Notice that C_t is not prob scale, something is amiss
1471632083469:print(C_t)
1471632496871:final             <- data.frame("Time"=time,
1471632496879:"char_Time"=as.character(time),
1471632496888:"Risk"=C_t)
1471632499767:final
1471632542361:x2 <- function() { return(final)}
1471632543809:x2()
1471632558746:ggplot(data=x2()) +
1471632558752:geom_step(aes(x=Time,y=Risk), direction="hv",size=1, colour="#e41a1c")+
1471632558758:scale_y_continuous( breaks = seq(0, 1, by = 0.1), limits = c(0,1), labels = percent) +
1471632558762:scale_x_continuous( breaks = seq(0, max(x2()$Time), by = round(max(x2()$Time)/9,digits=1)), limits = c(0,max(x2()$Time))) +
1471632558769:theme(panel.grid.major=element_blank(),
1471632558774:legend.title=element_blank(),
1471632558780:legend.position="top")+
1471632558786:theme_bw()+
1471632558791:#       geom_vline(xintercept=isolate(interactiveClickDF()$x),colour="blue",linetype="longdash")+
1471632558797:ylab("Probability of an Event Occuring")+
1471632558802:xlab("Days")
1471632569013:library(ggplot2)
1471632572428:ggplot(data=x2()) +
1471632572438:geom_step(aes(x=Time,y=Risk), direction="hv",size=1, colour="#e41a1c")+
1471632572441:scale_y_continuous( breaks = seq(0, 1, by = 0.1), limits = c(0,1), labels = percent) +
1471632572445:scale_x_continuous( breaks = seq(0, max(x2()$Time), by = round(max(x2()$Time)/9,digits=1)), limits = c(0,max(x2()$Time))) +
1471632572452:theme(panel.grid.major=element_blank(),
1471632572457:legend.title=element_blank(),
1471632572461:legend.position="top")+
1471632572466:theme_bw()+
1471632572469:#       geom_vline(xintercept=isolate(interactiveClickDF()$x),colour="blue",linetype="longdash")+
1471632572474:ylab("Probability of an Event Occuring")+
1471632572479:xlab("Days")
1471632580165:library(scales)
1471632582553:ggplot(data=x2()) +
1471632582558:geom_step(aes(x=Time,y=Risk), direction="hv",size=1, colour="#e41a1c")+
1471632582562:scale_y_continuous( breaks = seq(0, 1, by = 0.1), limits = c(0,1), labels = percent) +
1471632582568:scale_x_continuous( breaks = seq(0, max(x2()$Time), by = round(max(x2()$Time)/9,digits=1)), limits = c(0,max(x2()$Time))) +
1471632582577:theme(panel.grid.major=element_blank(),
1471632582582:legend.title=element_blank(),
1471632582589:legend.position="top")+
1471632582593:theme_bw()+
1471632582598:#       geom_vline(xintercept=isolate(interactiveClickDF()$x),colour="blue",linetype="longdash")+
1471632582603:ylab("Probability of an Event Occuring")+
1471632582608:xlab("Days")
1471632593116:shiny::runApp()
1471632624401:runApp()
1471632841830:runApp()
1471632866191:runApp()
1471632886832:shiny::runApp()
1471633198245:runApp()
1471633249816:runApp()
1471633270415:runApp()
1471633306105:runApp()
1471633354889:runApp()
1471633477723:runApp()
1471633486417:runApp()
1471633519891:runApp()
1471633558309:runApp()
1471636250759:runApp()
1471636420551:runApp()
1471636448135:runApp()
1471636566178:runApp()
